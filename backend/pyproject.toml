[tool.poetry]
name = "backend"
version = "0.1.0"
description = ""
authors = ["alejandropr05 <alejandropr05@hotmail.com>"]
packages = [
    {include = "app", from = "src"},
    {include = "model", from = "src"},
    {include = "sqlapp", from = "src"},
    {include = "utils", from = "src"},
    {include = "ml_models", from = "data"}
]

[tool.poetry.dependencies]
python = ">3.9,<3.12"
uvicorn = "^0.23.2"
fastapi = "^0.103.2"
fastapi-utils = "^0.2.1"
requests = "^2.31.0"
sqlalchemy = "1.4.49"
bs4 = "^0.0.1"
scikit-learn = "1.3.1"
spacy = "^3.7.1"
lxml = "^4.9.3"
psycopg2-binary = "^2.9.9"
types-requests = "^2.31.0.20240125"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
bcrypt = "4.0.1"
python-multipart = "^0.0.9"
python-dotenv = "^1.0.1"

[tool.poetry.extras]
src = ["app", "model", "sqlapp", "utils"]

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.1"
mypy = "^1.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[options.package_data]
app = "py.typed"

[flake8]
max-line-length = 79

[tool.pytest.ini_options]
addopts = "--cov=app.api"
testpaths = [
    "tests",
]

[tool.ruff]
line-length = 79

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 72
exclude = ["missing-trailing-comma"]

[tool.mypy]
mypy_path = "src/app"
check_untyped_defs = true
disallow_any_generics = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
no_implicit_reexport = true
